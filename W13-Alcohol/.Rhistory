ax = wx[indices_of_infectives[i]] # the x position of the infective
ay = wy[indices_of_infectives[i]] # the y position of the infective
indices_of_neighbors =
which(
(wx==(ax-1)&(wy==(ay-1)|wy==(ay+1))) # kitty corner neighbors on the left
|(wx==(ax+1)&(wy==(ay-1)|wy==(ay+1))) # kitty corner neighbors on the right
|(wx==ax&(wy==(ay-1)|wy==(ay+1)))     # neighbors above and below
|(wy==ay&(wx==(ax-1)|wx==(ax+1)))     # neighbors to left and right
)
state_vector_of_neighbors = wstate[indices_of_neighbors] # the state vector of the neighbors
##############################################################################
# count the number of susceptibles
##############################################################################
nsus = length(state_vector_of_neighbors[state_vector_of_neighbors==0]) # the number of susceptibles in the neighbors
ntouch = min(rpois(1,R0*delta_t*gamma),8) # sample a random number of neighbors for the infectives to touch in this
# time step with the Poisson distribution. This number cannot exceed 8.
if (ntouch>0&nsus>0){
vtouch = sample(8,ntouch)  # out of the 8 neighbors pick ntouch of them randomly
indices_of_touched = indices_of_neighbors[vtouch]
wstate[indices_of_touched][wstate[indices_of_touched]==0] = 1 # if susceptible neighbor was touched, change them to infected
}
##############################################################################
# now check if the infected person recovers in this time step
##############################################################################
prandom = runif(1)
if (prandom<(delta_t*gamma)){ # check to see if the infected person recovers
wstate[indices_of_infectives[i]] = 2
}
} # end loop over infectives
##############################################################################
# now plot the population, colored by their state
##############################################################################
points(wx,wy,col=scol[(wstate+1)],cex=0.5)
##############################################################################
# now increment the time, and count the number of infectives
##############################################################################
time = time + delta_t
ninf = length(wstate[wstate==1])
} # end while loop that checks if there is still at least one infected person
system("pwd")
system("pwd")
getwd()
?readRDS
tmp <- readRDS(file="/Users/mariama/Desktop/behav_msm.data")
install.packages(c('maps','dismo','rgeos','rgdal','rJava','tiff','rworldmap','maptools','biomod2'))
.library
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/Berkeley/Career/SC")
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
library(reshape2)
g2015 <- read.csv("2015_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
g2016 <- read.csv("2016_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
g2017 <- read.csv("2017_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
# Data Prep ----
# Label data with years
g2015["Year"] <- 2015
g2016["Year"] <- 2016
g2017["Year"] <- 2017
# Bind all together into one file
gonorrhea = rbind(g2015, g2016, g2017)
# Clean workspace
rm(g2015,g2016,g2017)
# Renaming from the data dictionary
gonorrhea <- rename(gonorrhea,
"partner_male"="Sex_Partner_Gender_._Male",
"partner_female"="Sex_Partner_Gender_._Female",
"partner_mtf"="Sex_Partner_Gender_._Transgender_.M_to_F.",
"partner_ftm"="Sex_Partner_Gender_._Transgender_.F_to_M.",
"partner_unk"="Sex_Partner_Gender_._Unknown",
"partner_ref"="Sex_Partner_Gender_._Refused",
"num_partners"="CGSSPRFPRFSexPart3Mo",
"rec_HIV_test" ="CGSSPRFPRFCliHIVTest",
"orientation"  ="CGSSPRFBeh7",
"num_male_part" ="CGSSPRFBeh8Male",
"num_female_part"  ="CGSSPRFBeh8Fem",
"met_at_bars" ="CGSSPRFBeh9Bars",
"which_bars" ="CGSSPRFBeh9BarsVenue",
"met_at_bathhouse" ="CGSSPRFBeh9Bath",
"which_bathhouse" ="CGSSPRFBeh9BathVenue",
"met_on_internet"  ="CGSSPRFBeh9Web",
"where_internet"  ="CGSSPRFBeh9WebVenue",
"met_other"  ="CGSSPRFBeh9Oth",
"how_met"  ="CGSSPRFBeh9OthVenue",
"last_intercourse"   ="CGSSPRFBeh18" ,
"last_partner_again"   ="CGSSPRFBeh24",
"last_partner_HIV"   ="CGSSPRFBeh23",
"HC_symptomatic"  ="CGSSPRFHCExp31",
"HC_notified_by_partner"="CGSSPRFHCExp32",
"HC_received_info"="testinfo",
"HC_told_partner"="toldpart",
"HC_prescription_for_partner"="CGSSPRFHCExp40",
"HC_prescription_who_offered"="CGSSPRFHCExp40a",
"HC_prescription_received"="CGSSPRFHCExp40b",
"HC_prescription_delivered"="CGSSPRFHCExp40c",
"HC_partner_treated" ="CGSSPRFHCExp411",
"HC_all_partners_treated"="CGSSPRFHCExp412",
"HC_referral_services"="CGSSPRFHCExp42")
# Mapping responses using the CalREDIE data dictionary
# ( https://www.cdph.ca.gov/Programs/CID/DCDC/CDPH%20Document%20Library/CalREDIE-Data-Dictionary.pdf)
gonorrhea$orientation <- as.factor(mapvalues(gonorrhea$orientation,
from = c(1,2,3,4,9),
to = c("straight", "gay", "bisexual", "other", "refused")))
gonorrhea$HC_partner_treated <- as.factor(mapvalues(gonorrhea$HC_partner_treated,
from = c(1,2,3,4,9),
to = c("yes", "probably", "not sure", "probably not", "refused")))
gonorrhea$last_intercourse <- as.factor(mapvalues(gonorrhea$last_intercourse,
from = c(1,2,3,4,5,9),
to = c("last week", "within last month", "within 2 months", "more than2 months ago", "don't know", "refused")))
gonorrhea$HC_prescription_who_offered <-as.factor(mapvalues(gonorrhea$HC_prescription_who_offered,
from = c(1),
to = ("doctor")))
gonorrhea$HC_all_partners_treated <-as.factor(mapvalues(gonorrhea$HC_all_partners_treated,
from = c(1,2,3,4,5,9),
to = c("all treated", "at least one definitely", "at least one probably", "not sure", "probably none", "refused")))
gonorrhea$last_partner_HIV <-as.factor(mapvalues(gonorrhea$last_partner_HIV,
from = c("Y","N","D","R"),
to = c("HIV pos","HIV neg","Do not know", "Refused")))
gonorrhea$Year <- as.factor(gonorrhea$Year)
gonorrhea$AgeRange <- cut(gonorrhea$Age,
breaks =c("14","19", "24", "29", "34", "39", "44", "49","54","94"),
labels =c("Under 19","19-24","25-29","30-34","35-39","40-44","45-49","50-54","55+"),
include.lowest=TRUE)
# labels =c("Under 19","19-24","25-29","30-34","35-39","40-44","45-49","50-54","55+"),
# labels = c(1,2,3,4,5,6,7,8,9),
yearcolor = c("cadetblue2", "cadetblue3", "cadetblue4")
# DONE Total number of gonorrhea diagnoses by year ----
plyear <- ggplot(gonorrhea, aes(Year)) + geom_point(stat="count") + geom_path(aes(group = 1), color ="turquoise4", stat = "count") +
ylim(0,200)
plyear <- plyear + labs(x="Year", y= "# of patients",
title = "Gonorrhea Diagnoses in Santa Cruz County by Year",
caption = "Fig 1 \n")
# DONE Gonorrhea diagnosis trends by age and by year ----
ageyear <- gonorrhea %>% count(Year, AgeRange)
ageyear$AgeRange <- as.factor(ageyear$AgeRange)
ay <- melt(ageyear, id.vars = c("AgeRange", "Year"))
agy <- dcast(ay, AgeRange ~ Year, value.var = "value")
ay <- melt(agy, id.vars = c("AgeRange"))
agexyear <- ggplot(subset(gonorrhea, AgeRange != "NA"), aes(AgeRange)) + geom_bar(stat = "count", aes(fill=Year), position="dodge") +
scale_fill_manual(values = yearcolor)
agexyear <- agexyear + labs(x = "Age Range", y = "# of patients",
title = "Gonorrhea Diagnoses in Santa Cruz County by Age and Year",
caption = "Fig 2") + theme_bw()
# DONE Percent changes in age groups----
agy$pc2017 <- (agy$"2017" / agy$"2016") * 100
agy$pc2016 <- (agy$"2016" / agy$"2015") * 100
agyp <- melt(agy, id.vars = c("AgeRange", '2015', '2016','2017'))
agyp <- agyp[complete.cases(agyp),]
rownames(agyp) <- 1:nrow(agyp)
agyp$variable_f = factor(agyp$variable, levels = c("pc2016", "pc2017"))
agypct2017 <- ggplot(agyp, aes(x=AgeRange, y=value)) +
geom_line(aes(group = variable, color=variable)) + geom_point(aes(color = variable)) +
geom_hline(aes(yintercept = 100)) + facet_grid(. ~ variable_f) +
scale_color_discrete(name = "Change",
breaks = c("pc2016","pc2017"),
labels=c("% change from 2015-2016", "% change from 2016-2017"))
# DONE slope graph ----
agy <- agy[complete.cases(agy),]
rownames(agy) <- 1:nrow(agy)
l15 <- paste(agy$AgeRange, "(",round(agy$"2015"), ")")
l16 <- paste("(",round(agy$"2016"),")")
l17 <- paste(agy$AgeRange,"(",round(agy$"2017"), ")")
agesl <- ggplot(agy) + geom_segment(aes(x=0, xend= 25, y=agy$"2015", yend=agy$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=agy$"2016", yend=agy$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
agesl <- agesl + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank()) +
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 50)
agesl <- agesl + geom_text(label = l15, aes(y=agy$"2015", x=0), size = 2.5, hjust = 1.1) +
geom_text(label = l16, aes(y=agy$"2016", x=25), size = 2.5) +
geom_text(label = l17, aes(y=agy$"2017", x=50), size = 2.5, hjust = -.1) +
geom_text(label = "2015", x = 0, y = (1.1*(max(agy$"2016"))), size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = (1.1*(max(agy$"2016"))), size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = (1.1*(max(agy$"2016"))), size = 4, hjust = -.05, color = "cadetblue4") +
labs(caption = "Data for 2017 only goes until November - aka incomplete")
rm(l15,l16,l17)
# DONE gender bar graph. Excluding MTF and FTM for ease of display ----
age_year_gender <- ggplot(subset(gonorrhea, Sex %in% c("Female","Male")), aes(AgeRange)) +
geom_bar(aes(fill = Year), position = "dodge") + facet_grid(~ Sex) +
scale_fill_manual(values = c("cadetblue2", "cadetblue3", "cadetblue4"))
age_year_gender <- age_year_gender + labs(x = "Age Range", y = "# of patients", title = "Gonorrhea Diagnoses in Santa Cruz County by Age, Year, and Gender",
caption = "Data for 2017 only goes until November - aka incomplete")
# DONE slope charts split by gender ----
sexyear <- gonorrhea %>% count(Year, AgeRange, Sex)
sexyear$AgeRange <- as.factor(sexyear$AgeRange)
sy_f <- subset(sexyear, Sex %in% c("Female"))
sy_f <- na.omit(sy_f, cols = sy_f$AgeRange)
sy_wf <- dcast(sy_f, AgeRange + Sex ~ Year, value.var = "n") # [s]ex[y]ear_[w]ideform[f]emale
#labels for slope chart
fl15 <- paste(sy_wf$AgeRange, "(",round(sy_wf$"2015"), ")")
fl16 <- paste("(",round(sy_wf$"2016"),")")
fl17 <- paste("(",round(sy_wf$"2017"), ")")
#slopechart
sy_female <- ggplot(sy_wf) + geom_segment(aes(x=0, xend= 25, y=sy_wf$"2015", yend=sy_wf$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=sy_wf$"2016", yend=sy_wf$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
sy_female <- sy_female + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank())+
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 33) +
geom_text(label = fl15, aes(y=sy_wf$"2015", x=0), size = 3, hjust = 1.1) +
geom_text(label = fl16, aes(y=sy_wf$"2016", x=25), size = 3) +
geom_text(label = fl17, aes(y=sy_wf$"2017", x=50), size = 3, hjust = -.1) +
geom_text(label = "2015", x = 0, y = 33, size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = 33, size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = 33, size = 4, hjust = -.05, color = "cadetblue4") +
labs(title = "Change in # of diagnoses for each age group for females", caption = "Data for 2017 only goes until November - aka incomplete")
sy_m <- subset(sexyear, Sex %in% c("Male"))
sy_m <- na.omit(sy_m, cols = sy_m$AgeRange)
sy_wm <- dcast(sy_m, AgeRange + Sex ~ Year, value.var = "n") # [s]ex[y]ear_[w]ideform[m]ale
#labels for slope chart
ml15 <- paste(sy_wm$AgeRange, "(",round(sy_wm$"2015"), ")")
ml16 <- paste("(",round(sy_wm$"2016"),")")
ml17 <- paste("(",round(sy_wm$"2017"), ")")
#slopechart
sy_male <- ggplot(sy_wm) + geom_segment(aes(x=0, xend= 25, y=sy_wm$"2015", yend=sy_wm$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=sy_wm$"2016", yend=sy_wm$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
sy_male <- sy_male + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank())+
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 33)
sy_male <- sy_male + geom_text(label = ml15, aes(y=sy_wm$"2015", x=0), size = 3, hjust = 1.1) +
geom_text(label = ml16, aes(y=sy_wm$"2016", x=25), size = 3) +
geom_text(label = ml17, aes(y=sy_wm$"2017", x=50), size = 3, hjust = -.1) +
geom_text(label = "2015", x = 0, y = 33, size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = 33, size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = 33, size = 4, hjust = -.05, color = "cadetblue4") +
labs(title = "Change in # of diagnoses for each age group for males", caption = "Data for 2017 only goes until November - aka incomplete")
#cleanup
rm(fl15, fl16, fl17, ml15, ml16, ml17)
agesl
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/Berkeley/Career/SC")
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
library(reshape2)
plyear
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
setwd("~/Documents/Berkeley/Career/SC")
library(plyr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
library(reshape2)
g2015 <- read.csv("2015_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
g2016 <- read.csv("2016_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
g2017 <- read.csv("2017_gonorrhea.csv", na.strings=c("","NA"),header=TRUE)
# Data Prep ----
# Label data with years
g2015["Year"] <- 2015
g2016["Year"] <- 2016
g2017["Year"] <- 2017
# Bind all together into one file
gonorrhea = rbind(g2015, g2016, g2017)
# Clean workspace
rm(g2015,g2016,g2017)
# Renaming from the data dictionary
gonorrhea <- rename(gonorrhea,
"partner_male"="Sex_Partner_Gender_._Male",
"partner_female"="Sex_Partner_Gender_._Female",
"partner_mtf"="Sex_Partner_Gender_._Transgender_.M_to_F.",
"partner_ftm"="Sex_Partner_Gender_._Transgender_.F_to_M.",
"partner_unk"="Sex_Partner_Gender_._Unknown",
"partner_ref"="Sex_Partner_Gender_._Refused",
"num_partners"="CGSSPRFPRFSexPart3Mo",
"rec_HIV_test" ="CGSSPRFPRFCliHIVTest",
"orientation"  ="CGSSPRFBeh7",
"num_male_part" ="CGSSPRFBeh8Male",
"num_female_part"  ="CGSSPRFBeh8Fem",
"met_at_bars" ="CGSSPRFBeh9Bars",
"which_bars" ="CGSSPRFBeh9BarsVenue",
"met_at_bathhouse" ="CGSSPRFBeh9Bath",
"which_bathhouse" ="CGSSPRFBeh9BathVenue",
"met_on_internet"  ="CGSSPRFBeh9Web",
"where_internet"  ="CGSSPRFBeh9WebVenue",
"met_other"  ="CGSSPRFBeh9Oth",
"how_met"  ="CGSSPRFBeh9OthVenue",
"last_intercourse"   ="CGSSPRFBeh18" ,
"last_partner_again"   ="CGSSPRFBeh24",
"last_partner_HIV"   ="CGSSPRFBeh23",
"HC_symptomatic"  ="CGSSPRFHCExp31",
"HC_notified_by_partner"="CGSSPRFHCExp32",
"HC_received_info"="testinfo",
"HC_told_partner"="toldpart",
"HC_prescription_for_partner"="CGSSPRFHCExp40",
"HC_prescription_who_offered"="CGSSPRFHCExp40a",
"HC_prescription_received"="CGSSPRFHCExp40b",
"HC_prescription_delivered"="CGSSPRFHCExp40c",
"HC_partner_treated" ="CGSSPRFHCExp411",
"HC_all_partners_treated"="CGSSPRFHCExp412",
"HC_referral_services"="CGSSPRFHCExp42")
# Mapping responses using the CalREDIE data dictionary
# ( https://www.cdph.ca.gov/Programs/CID/DCDC/CDPH%20Document%20Library/CalREDIE-Data-Dictionary.pdf)
gonorrhea$orientation <- as.factor(mapvalues(gonorrhea$orientation,
from = c(1,2,3,4,9),
to = c("straight", "gay", "bisexual", "other", "refused")))
gonorrhea$HC_partner_treated <- as.factor(mapvalues(gonorrhea$HC_partner_treated,
from = c(1,2,3,4,9),
to = c("yes", "probably", "not sure", "probably not", "refused")))
gonorrhea$last_intercourse <- as.factor(mapvalues(gonorrhea$last_intercourse,
from = c(1,2,3,4,5,9),
to = c("last week", "within last month", "within 2 months", "more than2 months ago", "don't know", "refused")))
gonorrhea$HC_prescription_who_offered <-as.factor(mapvalues(gonorrhea$HC_prescription_who_offered,
from = c(1),
to = ("doctor")))
gonorrhea$HC_all_partners_treated <-as.factor(mapvalues(gonorrhea$HC_all_partners_treated,
from = c(1,2,3,4,5,9),
to = c("all treated", "at least one definitely", "at least one probably", "not sure", "probably none", "refused")))
gonorrhea$last_partner_HIV <-as.factor(mapvalues(gonorrhea$last_partner_HIV,
from = c("Y","N","D","R"),
to = c("HIV pos","HIV neg","Do not know", "Refused")))
gonorrhea$Year <- as.factor(gonorrhea$Year)
gonorrhea$AgeRange <- cut(gonorrhea$Age,
breaks =c("14","19", "24", "29", "34", "39", "44", "49","54","94"),
labels =c("Under 19","19-24","25-29","30-34","35-39","40-44","45-49","50-54","55+"),
include.lowest=TRUE)
# labels =c("Under 19","19-24","25-29","30-34","35-39","40-44","45-49","50-54","55+"),
# labels = c(1,2,3,4,5,6,7,8,9),
yearcolor = c("cadetblue2", "cadetblue3", "cadetblue4")
# DONE Total number of gonorrhea diagnoses by year ----
plyear <- ggplot(gonorrhea, aes(Year)) + geom_point(stat="count") + geom_path(aes(group = 1), color ="turquoise4", stat = "count") +
ylim(0,200)
plyear <- plyear + labs(x="Year", y= "# of patients",
title = "Gonorrhea Diagnoses in Santa Cruz County by Year",
caption = "Fig 1 \n")
# DONE Gonorrhea diagnosis trends by age and by year ----
ageyear <- gonorrhea %>% count(Year, AgeRange)
ageyear$AgeRange <- as.factor(ageyear$AgeRange)
ay <- melt(ageyear, id.vars = c("AgeRange", "Year"))
agy <- dcast(ay, AgeRange ~ Year, value.var = "value")
ay <- melt(agy, id.vars = c("AgeRange"))
agexyear <- ggplot(subset(gonorrhea, AgeRange != "NA"), aes(AgeRange)) + geom_bar(stat = "count", aes(fill=Year), position="dodge") +
scale_fill_manual(values = yearcolor)
agexyear <- agexyear + labs(x = "Age Range", y = "# of patients",
title = "Gonorrhea Diagnoses in Santa Cruz County by Age and Year",
caption = "Fig 2") + theme_bw()
# DONE Percent changes in age groups----
agy$pc2017 <- (agy$"2017" / agy$"2016") * 100
agy$pc2016 <- (agy$"2016" / agy$"2015") * 100
agyp <- melt(agy, id.vars = c("AgeRange", '2015', '2016','2017'))
agyp <- agyp[complete.cases(agyp),]
rownames(agyp) <- 1:nrow(agyp)
agyp$variable_f = factor(agyp$variable, levels = c("pc2016", "pc2017"))
agypct2017 <- ggplot(agyp, aes(x=AgeRange, y=value)) +
geom_line(aes(group = variable, color=variable)) + geom_point(aes(color = variable)) +
geom_hline(aes(yintercept = 100)) + facet_grid(. ~ variable_f) +
scale_color_discrete(name = "Change",
breaks = c("pc2016","pc2017"),
labels=c("% change from 2015-2016", "% change from 2016-2017"))
# DONE slope graph ----
agy <- agy[complete.cases(agy),]
rownames(agy) <- 1:nrow(agy)
l15 <- paste(agy$AgeRange, "(",round(agy$"2015"), ")")
l16 <- paste("(",round(agy$"2016"),")")
l17 <- paste(agy$AgeRange,"(",round(agy$"2017"), ")")
agesl <- ggplot(agy) + geom_segment(aes(x=0, xend= 25, y=agy$"2015", yend=agy$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=agy$"2016", yend=agy$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
agesl <- agesl + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank()) +
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 50)
agesl <- agesl + geom_text(label = l15, aes(y=agy$"2015", x=0), size = 2.5, hjust = 1.1) +
geom_text(label = l16, aes(y=agy$"2016", x=25), size = 2.5) +
geom_text(label = l17, aes(y=agy$"2017", x=50), size = 2.5, hjust = -.1) +
geom_text(label = "2015", x = 0, y = (1.1*(max(agy$"2016"))), size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = (1.1*(max(agy$"2016"))), size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = (1.1*(max(agy$"2016"))), size = 4, hjust = -.05, color = "cadetblue4") +
labs(caption = "Data for 2017 only goes until November - aka incomplete")
rm(l15,l16,l17)
# DONE gender bar graph. Excluding MTF and FTM for ease of display ----
age_year_gender <- ggplot(subset(gonorrhea, Sex %in% c("Female","Male")), aes(AgeRange)) +
geom_bar(aes(fill = Year), position = "dodge") + facet_grid(~ Sex) +
scale_fill_manual(values = c("cadetblue2", "cadetblue3", "cadetblue4"))
age_year_gender <- age_year_gender + labs(x = "Age Range", y = "# of patients", title = "Gonorrhea Diagnoses in Santa Cruz County by Age, Year, and Gender",
caption = "Data for 2017 only goes until November - aka incomplete")
# DONE slope charts split by gender ----
sexyear <- gonorrhea %>% count(Year, AgeRange, Sex)
sexyear$AgeRange <- as.factor(sexyear$AgeRange)
sy_f <- subset(sexyear, Sex %in% c("Female"))
sy_f <- na.omit(sy_f, cols = sy_f$AgeRange)
sy_wf <- dcast(sy_f, AgeRange + Sex ~ Year, value.var = "n") # [s]ex[y]ear_[w]ideform[f]emale
#labels for slope chart
fl15 <- paste(sy_wf$AgeRange, "(",round(sy_wf$"2015"), ")")
fl16 <- paste("(",round(sy_wf$"2016"),")")
fl17 <- paste("(",round(sy_wf$"2017"), ")")
#slopechart
sy_female <- ggplot(sy_wf) + geom_segment(aes(x=0, xend= 25, y=sy_wf$"2015", yend=sy_wf$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=sy_wf$"2016", yend=sy_wf$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
sy_female <- sy_female + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank())+
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 33) +
geom_text(label = fl15, aes(y=sy_wf$"2015", x=0), size = 3, hjust = 1.1) +
geom_text(label = fl16, aes(y=sy_wf$"2016", x=25), size = 3) +
geom_text(label = fl17, aes(y=sy_wf$"2017", x=50), size = 3, hjust = -.1) +
geom_text(label = "2015", x = 0, y = 33, size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = 33, size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = 33, size = 4, hjust = -.05, color = "cadetblue4") +
labs(title = "Change in # of diagnoses for each age group for females", caption = "Data for 2017 only goes until November - aka incomplete")
sy_m <- subset(sexyear, Sex %in% c("Male"))
sy_m <- na.omit(sy_m, cols = sy_m$AgeRange)
sy_wm <- dcast(sy_m, AgeRange + Sex ~ Year, value.var = "n") # [s]ex[y]ear_[w]ideform[m]ale
#labels for slope chart
ml15 <- paste(sy_wm$AgeRange, "(",round(sy_wm$"2015"), ")")
ml16 <- paste("(",round(sy_wm$"2016"),")")
ml17 <- paste("(",round(sy_wm$"2017"), ")")
#slopechart
sy_male <- ggplot(sy_wm) + geom_segment(aes(x=0, xend= 25, y=sy_wm$"2015", yend=sy_wm$"2016", color=AgeRange), size=.75) +
geom_segment(aes(x=25, xend= 50, y=sy_wm$"2016", yend=sy_wm$"2017", color=AgeRange), size=.75) +
scale_color_manual(values =c("lightsteelblue1", "lightsteelblue2", "lightsteelblue3","plum1", "plum2", "plum3", "plum4", "palegreen2", "palegreen3"))
sy_male <- sy_male + xlab("") + ylab("Age Range") +
theme(panel.background = element_blank()) +
theme(panel.grid=element_blank()) +
theme(axis.ticks=element_blank()) +
theme(axis.text=element_blank())+
theme(panel.border=element_blank()) + xlim(-10,60) + ylim(0, 33)
sy_male <- sy_male + geom_text(label = ml15, aes(y=sy_wm$"2015", x=0), size = 3, hjust = 1.1) +
geom_text(label = ml16, aes(y=sy_wm$"2016", x=25), size = 3) +
geom_text(label = ml17, aes(y=sy_wm$"2017", x=50), size = 3, hjust = -.1) +
geom_text(label = "2015", x = 0, y = 33, size = 4, hjust = 1.2, color = "cadetblue2") +
geom_text(label = "2016", x = 25, y = 33, size = 4, color = "cadetblue3") +
geom_text(label = "2017", x = 50, y = 33, size = 4, hjust = -.05, color = "cadetblue4") +
labs(title = "Change in # of diagnoses for each age group for males", caption = "Data for 2017 only goes until November - aka incomplete")
#cleanup
rm(fl15, fl16, fl17, ml15, ml16, ml17)
plyear
agesl
agexyear
?kable_styling
library(kableExtra)
?kable_styling
rm(list=ls())
library(ggplot2)
library(ggmap)
library(maps)
library(dplyr)
setwd("~/Documents/GitHub/TidyTuesday/W13-Alcohol")
worldmap <- map_data("world")
alcohol <- read.csv("week13_alcohol_global.csv")
alcohol <- rename(alcohol, "region" = 'country')
unique_countries_wm <- unique(worldmap$region)
unique_countries_alc <- unique(alcohol$region)
setdiff(unique_countries_alc, unique_countries_wm)
#what countries are in the alc dataset that aren't in the world map dataset
setdiff(unique_countries_wm, unique_countries_alc)
# what countries are in the world map dataset that aren't in the alc dataset
# generate this mutate based on the lists generated by those setdiffs.
# No easy way I can see to automate this
worldmap <- mutate(worldmap, region = case_when(
region == "Antigua" ~ "Antigua & Barbuda",
region == "Barbuda" ~ "Antigua & Barbuda",
region == "Bosnia and Herzegovina" ~ "Bosnia-Herzegovina",
region == "Ivory Coast" ~ "Cote d'Ivoire",
region == "Cape Verde" ~ "Cabo Verde",
region == "Republic of Congo" ~ "Congo",
region == "Democratic Republic of the Congo" ~ "DR Congo",
region == "Russia" ~ "Russian Federation",
region == "Saint Kitts" ~ "St. Kitts & Nevis",
region == "Nevis" ~ "St. Kitts & Nevis",
region == "Saint Lucia" ~ "St. Lucia",
region == "South Sudan" ~ "Sudan",
region == "Saint Vincent" ~ "St. Vincent & the Grenadines",
region == "Grenadines" ~ "St. Vincent & the Grenadines",
region == "Sao Tome and Principe" ~ "Sao Tome & Principe",
region == "Trinidad" ~ "Trinidad & Tobago",
region == "Tobago" ~ "Trinidad & Tobago",
region == "UK" ~ "United Kingdom",
TRUE ~ region
))
# This dataset is from 2010, but South Sudan did not form until 2011,
# so I added South Sudan to Sudan, as that would be accurate for the time.
alcoholmapdata <- inner_join(worldmap, alcohol, by = 'region')
beer_color <- lacroix_palette("Coconut", n = 193, type = "continuous")
wine_color <- lacroix_palette("PassionFruit", n = 193, type = "continuous")
spirit_color <- lacroix_palette("PommeBaya", n = 193, type = "continuous")
beermap <- ggplot() + geom_polygon(data = alcoholmapdata, aes(x=long, y = lat, group = group, fill = beer_servings)) +
coord_fixed(1.3) + theme(axis.text = element_blank(), axis.line = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), panel.background = element_blank(), panel.grid = element_blank(), axis.title = element_blank()
) + scale_fill_gradientn(colours = beer_color, name = "Servings of Beer") + ggtitle("Per Capita Beer Consumption")
winemap <- ggplot() + geom_polygon(data = alcoholmapdata, aes(x=long, y = lat, group = group, fill = wine_servings)) +
coord_fixed(1.3) + theme(axis.text = element_blank(), axis.line = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), panel.background = element_blank(), panel.grid = element_blank(), axis.title = element_blank()
) + scale_fill_gradientn(colours = wine_color, name = "Servings of Wine") + ggtitle("Per Capita Wine Consumption")
spiritmap <- ggplot() + geom_polygon(data = alcoholmapdata, aes(x=long, y = lat, group = group, fill = spirit_servings)) +
coord_fixed(1.3) + theme(axis.text = element_blank(), axis.line = element_blank(), axis.ticks = element_blank(), panel.border = element_blank(), panel.background = element_blank(), panel.grid = element_blank(), axis.title = element_blank()
) + scale_fill_gradientn(colours = spirit_color, name = "Servings of Spirits") + ggtitle("Per Capita Spirit Consumption")
ggsave("beer.png", beermap, dpi = 300)
ggsave("wine.png", winemap, dpi = 300)
ggsave("spirit.png", spiritmap, dpi = 300)
View(alcohol)
